# /etc/catalyst/catalyst.conf

# Simple descriptions of catalyst settings. Please refer to the online
# documentation for more information.

# Creates a .DIGESTS file containing the hash output from each of the selected
# hashes.
#
# To see a list of supported hashes, run
#
#     $ python3 -c 'import hashlib; print(hashlib.algorithms_available)'
#
digests="blake2b sha512"

# envscript allows users to set options such as http proxies, MAKEOPTS,
# GENTOO_MIRRORS, or any other environment variables needed for building.
# The envscript file sets environment variables like so:
# export FOO="bar"
envscript="/etc/catalyst/catalystrc"

# options set different build-time options for catalyst. Some examples are:
# autoresume = Attempt to resume a failed build, clear the autoresume flags with
#	the -a option to the catalyst cmdline.  -p will clear the autoresume flags
#	as well as your pkgcache and kerncache
#	( This option is not fully tested, bug reports welcome )
# bindist = enables the bindist USE flag, please see package specific definition,
#	however, it is suggested to enable this if redistributing builds.
#	This optional USE flag is normally cleaned from the make.conf file on
#	completion of the stage.  For a non-cleaned version,
#	use sticky-config also (see below)
# ccache = enables build time ccache support
# distcc = enable distcc support for building. You have to set distcc_hosts in
#	your spec file.
# icecream = enables icecream compiler cluster support for building
# keepwork = Prevents the removal of the working chroot path and any autoresume
#	files or points.
# kerncache = keeps a tbz2 of your built kernel and modules (useful if your
#	build stops in livecd-stage2)
# pkgcache = keeps a tbz2 of every built package (useful if your build stops
#	prematurely)
# preserve_libs = enables portage to preserve used libs when unmerging packages
#	(used on installcd-stage2 and stage4 targets)
# seedcache = use the build output of a previous target if it exists to speed up
#	the copy
# sticky-config = enables the code that will keep any internal 'catalyst_use' flags
#	added to the USE= for building the stage.  These are usually added for legal
#	or specific needs in building the the early stage.  Mostly it is the
#	'bindist' USE flag option that is used for legal reasons, please see its
#	specific definition.  It will also keep any /etc/portage/package.*
#	files or directories.
#
# (These options can be used together)
options="autoresume bindist kerncache pkgcache seedcache"

# Source portdir specifies the source portage tree used by the snapshot target.
portdir="/var/db/repos/gentoo"

# source_matching specifies how catalyst will match non-specific file names
# if the filename is not found as an exact match.
# ie: a filename without the extension specified.  "/path/to/foo"
#
# possible values are:
#   "strict" meaning if more than one file of that name is present with any
#            file extension, then it will raise an exception.
#   "loose"  meaning it will search for an existing filename with an added
#            extension from an ordered list of extensions determined from the
#            decompressor_search_order specification in the spec file or (default)
source_matching="strict"

# port_logdir is where all build logs will be kept. This dir will be automatically cleaned
# of all logs over 30 days old. If left undefined the logs will remain in the build directory
# as usual and get cleaned every time a stage build is restarted.
# port_logdir="/var/tmp/catalyst/tmp"

# var_tmpfs_portage will mount a tmpfs for /var/tmp/portage so building takes place in RAM
# this feature requires a pretty large tmpfs ({open,libre}office needs ~8GB to build)
# WARNING: If you use too much RAM everything will fail horribly and it is not our fault.
# set size of /var/tmp/portage tmpfs in gigabytes
# var_tmpfs_portage=16
